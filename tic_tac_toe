def display_board(board):
     print('''+-------+-------+-------+
|       |       |       |
|   {}   |    {}  |   {}   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   {}   |   {}   |   {}   |
|       |       |       |
+-------+-------+-------+
|       |       |       |
|   {}   |   {}   |   {}   |
|       |       |       |
+-------+-------+-------+'''.format(board[0][0],board[0][1],board[0][2],board[1][0],board[1][1],board[1][2],board[2][0],board[2][1],board[2][2]))



def enter_move(board):
    n=input("Enter your move:")
    if dic[n] not in ['X','O']:
        dic[n]='O'
        board[dic2[n][0],dic2[n][1]]='O'
    
        
    # The function accepts the board's current status, asks the user about their move, 
    # checks the input, and updates the board according to the user's decision.


def make_list_of_free_fields(board):
    lst=[]
    for i in board:
        for j in i:
            if (j!='X' and j!= 'O'):
                lst.append(dic2[j])
                
        
    # The function browses the board and builds a list of all the free squares; 
    # the list consists of tuples, while each tuple is a pair of row and column numbers.


def victory_for(board, sign):
    if (board[0][0]==board[0][1]==board[0][2]==sign or board[1][0]==board[1][1]==board[1][2]==sign
        or board[2][0]==board[2][1]==board[2][2]==sign or board[0][0]==board[1][1]==board[2][2]==sign
        or board[0][2]==board[1][1]==board[2][0]==sign):
        return ('{} Won',sign)

    else:
        return False
            
    
    # The function analyzes the board's status in order to check if 
    # the player using 'O's or 'X's has won the game


def draw_move(board):
    from random import randrange
    a=randrange(1,10)
    # The function draws the computer's move and updates the board.
    

board=[[1,2,3],[4,'X',6],[7,8,9]] 
dic={}
keys=[1,2,3,4,5,6,7,8,9]
values=[1,2,3,4,'X',6,7,8,9]

for i in keys:
    dic[i]=values[i-2]
print(dic)
dic2={1:(0,0),2:(0,1),3:(0,2),4:(1,0),5:(1,1),6:(1,2),7:(2,0),8:(2,1),9:(2,2)}
